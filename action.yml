name: 'Terraform Backend Action'
description: 'Download or upload Terraform state file from/to GitHub repository'
inputs:
  token:
    description: 'GitHub Token'
    required: true
  state_repo:
    description: 'Repository containing the Terraform state file'
    required: true
  state_path:
    description: 'Path to the Terraform state file in the `state_repo`'
    required: true
    default: 'terraform.tfstate'
  action:
    description: 'Action to perform (download or upload)'
    required: true
  sha:
    description: 'SHA of the state file (required for upload)'
    required: false
  message:
    description: 'Commit message for the upload action'
    required: false
    default: 'Update state file'
  committer_name:
    description: 'Committer name for the upload action'
    required: false
    default: 'github-actions[bot]'
  committer_email:
    description: 'Committer email for the upload action'
    required: false
    default: 'github-actions[bot]@users.noreply.github.com'
outputs:
  sha:
    description: 'SHA of the state file (only for download)'

runs:
  using: 'composite'
  steps:
    - name: Perform action
      run: |
        if [ "${{ inputs.action }}" = "download" ]; then
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ inputs.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ inputs.state_repo }}/contents/${{ inputs.state_path }} > terraform.tfstate.response
          jq -r '.content' terraform.tfstate.response | base64 --decode > terraform.tfstate
          echo "sha=$(jq -r '.sha' terraform.tfstate.response)" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.action }}" = "upload" ]; then
          if [ -z "${{ inputs.sha }}" ]; then
            echo "Error: sha input is required for upload action" >&2
            exit 1
          fi
          CONTENT=$(base64 terraform.tfstate | tr -d '\n')
          jq -n --arg msg "${{ inputs.message }}" --arg name "${{ inputs.committer_name }}" --arg email "${{ inputs.committer_email }}" --arg content "$CONTENT" --arg sha "${{ inputs.sha }}" '{message: $msg, committer: {name: $name, email: $email}, content: $content, sha: $sha}' > payload.json
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ inputs.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ inputs.state_repo }}/contents/${{ inputs.state_path }} \
            -d @"payload.json"
        else
          echo "Error: Invalid action input, must be 'download' or 'upload'" >&2
          exit 1
        fi
